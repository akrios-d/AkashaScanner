@page "/home"

@inject AppUpdate AppUpdate

<div class="content">
    <p>
        Welcome to the Akasha Scanner! (version @(Utils.AppVersion.ToString(3)))
    </p>
    <p>
        <a class="link" href="https://github.com/akrios-d/AkashaScanner/blob/master/README.md" target="_blank">
            Home Page
        </a>
    </p>
    @if (!string.IsNullOrEmpty(UpdateUrl))
    {
        <p>
            A new update is available. <span class="link" @onclick="DownloadUpdate">Download now</span>.
        </p>
    }
    else
    {
        <p>
            Your application is up to date!
        </p>
    }
</div>

<!-- Modal for update progress -->
<Modal Visible="@IsUpdating">
    <div class="modal__content">
        <h3>Downloading Latest Update</h3>
        <Loading />
        <p>Please wait while the update is being downloaded...</p>
    </div>
</Modal>

@code {
    private string? UpdateUrl { get; set; }
    private bool IsUpdating { get; set; } = false;
    private string? ErrorMessage { get; set; }

    /// <summary>
    /// On initialization, check for available updates.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            UpdateUrl = await AppUpdate.Check();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Failed to check for updates: {ex.Message}");
            ErrorMessage = "Failed to check for updates. Please try again later.";
        }
    }

    /// <summary>
    /// Starts downloading the update if a URL is available.
    /// </summary>
    private async Task DownloadUpdate()
    {
        if (string.IsNullOrEmpty(UpdateUrl))
        {
            ErrorMessage = "No update URL available.";
            return;
        }

        IsUpdating = true;
        try
        {
            await AppUpdate.StartUpdate(UpdateUrl);
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Failed to download update: {ex.Message}");
            ErrorMessage = "Failed to download the update. Please try again later.";
        }
        finally
        {
            IsUpdating = false;
        }
    }
}
